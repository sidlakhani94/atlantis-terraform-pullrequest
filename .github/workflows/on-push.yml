name: 'Terraform Deployment'

on:
  push:
    branches:
      - dev

permissions:
  contents: read

jobs:
  checkov:
    name: 'Checkov'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run Checkov action
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          output_format: sarif
          output_file_path: reports/checkov-results.sarif

  tflint:
    name: 'Tflint'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup TFLint
        run: curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
      - name: Install Terraform plugins
        run: tflint --init
      - name: Lint Terraform files
        run: tflint
        
  create_pull_request:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.PAT }}
          commit-message: 'Create pull request'
          branch: main
          title: 'Pull Request Title'
          body: 'Pull Request Body'

  pull_request_approval:
    needs: create_pull_request
    runs-on: ubuntu-latest

    steps:
      - name: Request Review
        uses: marocchino/sticky-pull-request-comment@v5
        with:
          message: 'Please review this pull request'
          token: ${{ secrets.PAT }}
          pull-request-number: ${{ needs.create_pull_request.outputs.pull-request-number }}

      - name: Wait for Approval
        id: approval
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.PAT }}
          script: |
            const { owner, repo, number } = context.issue;
            const { data: reviews } = await github.pulls.listReviews({ owner, repo, pull_number: number });
            const approved = reviews.some(review => review.state === 'APPROVED');
            if (approved) {
              console.log('Pull request approved.');
              process.exit(0);
            } else {
              console.log('Waiting for pull request approval...');
              process.exit(1);
            }

  merge_pull_request:
    needs: pull_request_approval
    runs-on: ubuntu-latest
    if: ${{ needs.pull_request_approval.outputs.approval == 'true' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Merge Pull Request
        run: |
          git config --global user.name "sidlakhani94"
          git config --global user.email "lakhanisiddharth_007@yahoo.co.in"
          git fetch origin pull/${{ needs.create_pull_request.outputs.pull-request-number }}/merge:pr-merge
          git checkout pr-merge
          git merge --no-ff dev -m "Merge pull request"
          git push origin pr-merge

      - name: Complete Pull Request
        uses: peter-evans/complete-pull-request@v1
        with:
          pull-request-number: ${{ needs.create_pull_request.outputs.pull-request-number }}
          completion: success
          token: ${{ secrets.PAT }}
