name: 'Terraform Deployment'

on:
  push:
    branches:
      - dev

permissions:
  contents: read

jobs:
  checkov:
    name: 'Checkov'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run Checkov action
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          output_format: sarif
          output_file_path: reports/checkov-results.sarif

  tflint:
    name: 'Tflint'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup TFLint
        run: curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
      - name: Install Terraform plugins
        run: tflint --init
      - name: Lint Terraform files
        run: tflint
        
  pull-request-create:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Pull Request
        run: |
          git config --global user.name "sidlakhani94"
          git config --global user.email "lakhanisiddharth_007@yahoo.co.in"
          git checkout -b ${BRANCH_NAME}
          git commit -m "Pull Request Title" -m "Pull Request Body"
          git push origin ${BRANCH_NAME}

      - name: Request Reviews
        uses: peter-evans/request-changes@v1
        with:
          reviewers: sidlakhani94
          token: ${{ secrets.PAT }}

      - name: Wait for Reviews
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.PAT }}
          script: |
            const { owner, repo, number } = context.issue;
            const pr = await github.pulls.get({ owner, repo, pull_number: number });
            if (pr.data.requested_reviewers.length === 0) {
              console.log("All reviews have been completed.");
              process.exit(0);
            } else {
              console.log("Waiting for all reviews to be completed...");
              process.exit(1);
            }

  merge:
    needs: pull-request-create
    runs-on: ubuntu-latest
    if: ${{ needs.build.outputs.review_completed == 'true' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Merge Pull Request
        run: |
          git config --global user.name "sidlakhani94"
          git config --global user.email "lakhanisiddharth_007@yahoo.co.in"
          git fetch origin pull/${{ github.event.pull_request.number }}/merge:pr-merge
          git checkout main
          git merge --no-ff ${BRANCH_NAME} -m "Merge pull request"
          git push origin main

      - name: Complete Pull Request
        uses: peter-evans/complete-pull-request@v1
        with:
          pull-request-number: ${{ github.event.pull_request.number }}
          completion: success
          token: ${{ secrets.PAT }}
